<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>rabbitmq遇见的问题记录</title>
      <link href="/2022/12/18/rabbitmq%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/12/18/rabbitmq%E9%81%87%E8%A7%81%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p><strong><font color='red'>注意：</font> 所有人遇见的报错可能相同，但是问题不一定相同</strong></p><h2 id="ShutdownSignalException">ShutdownSignalException</h2><p><strong>错误描述：</strong> NOT_FOUND - no queue ‘ack_queue2’ in vhost ‘/’</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Caused by: com.rabbitmq.client.ShutdownSignalException: channel error; protocol method: #method&lt;channel.close&gt;(reply-code=<span class="number">404</span>, reply-text=NOT_FOUND - no queue <span class="string">&#x27;ack_queue2&#x27;</span> in vhost <span class="string">&#x27;/&#x27;</span>, class-id=<span class="number">60</span>, method-id=<span class="number">20</span>)</span><br><span class="line">at com.rabbitmq.client.impl.ChannelN.asyncShutdown(ChannelN.java:<span class="number">517</span>)</span><br><span class="line">at com.rabbitmq.client.impl.ChannelN.processAsync(ChannelN.java:<span class="number">341</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQChannel.handleCompleteInboundCommand(AMQChannel.java:<span class="number">182</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:<span class="number">114</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:<span class="number">739</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQConnection.access$<span class="number">300</span>(AMQConnection.java:<span class="number">47</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:<span class="number">666</span>)</span><br><span class="line">at java.base/java.lang.Thread.run(Thread.java:<span class="number">834</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原因： 因为先启动了消费线程，未启动工作线程，且是新建的一个队列，导致消费线程未找到对应的队列</p><p>解决： 还未创建rabbitmq队列，需要先运行生产信息的程序或者手动在rabbitmq的web端创建队列</p><p><strong>错误描述：</strong> channel error; protocol method: #method&lt;channel.close&gt;(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg ‘durable’ for queue ‘ack_queue’ in vhost ‘/’: received ‘true’ but current is ‘false’,</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Caused by: com.rabbitmq.client.ShutdownSignalException: channel error; protocol method: #method&lt;channel.close&gt;(reply-code=<span class="number">406</span>, reply-text=PRECONDITION_FAILED - inequivalent arg <span class="string">&#x27;durable&#x27;</span> <span class="keyword">for</span> queue <span class="string">&#x27;ack_queue&#x27;</span> in vhost <span class="string">&#x27;/&#x27;</span>: received <span class="string">&#x27;true&#x27;</span> but current is <span class="string">&#x27;false&#x27;</span>, class-id=<span class="number">50</span>, method-id=<span class="number">10</span>)</span><br><span class="line">at com.rabbitmq.client.impl.ChannelN.asyncShutdown(ChannelN.java:<span class="number">517</span>)</span><br><span class="line">at com.rabbitmq.client.impl.ChannelN.processAsync(ChannelN.java:<span class="number">341</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQChannel.handleCompleteInboundCommand(AMQChannel.java:<span class="number">182</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:<span class="number">114</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:<span class="number">739</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQConnection.access$<span class="number">300</span>(AMQConnection.java:<span class="number">47</span>)</span><br><span class="line">at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:<span class="number">666</span>)</span><br><span class="line">at java.base/java.lang.Thread.run(Thread.java:<span class="number">834</span>)</span><br></pre></td></tr></table></figure><p>原因： 因为先创建了一个队列，之前可能是未持久化，现在启动的线程将当前队列变成持久化</p><p>解决：去rabbitmq的web端将当前队列删除，然后重新运行即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabbitmq安装</title>
      <link href="/2022/12/15/rabbitmq%E5%AE%89%E8%A3%85/"/>
      <url>/2022/12/15/rabbitmq%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1>1、安装</h1><h3 id="windows安装">windows安装</h3><p>1、<a href="https://www.rabbitmq.com/which-erlang.html">查看erLang和RabbitMQ的版本对应</a></p><p>2、去<a href="https://www.erlang.org/downloads?spm=a2c6h.12873639.article-detail.7.433733dfV551eG">erlang官网</a>下载erlang,，安装一直点next(下一步)就行了(存储路径自己修改)，安装完之后，配置环境变量。使用 erl 判断是否安装</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go@main/imgs/image-20221215193723385.png" alt="image-20221215193723385"></p><p>3、根据第一步获取的版本信息去下载对应的RabbitMQ，<a href="https://github.com/rabbitmq/rabbitmq-server/tags">下载地址</a></p><p>下载完后，接着到双击安装，一直点下一步安装即可，安装完成后，找到安装目录：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go@main/imgs/image-20221215194011976.png" alt="image-20221215194011976"></p><p>在此目录下打开cmd命令，输入 <code>rabbitmq-plugins enable rabbitmq_management</code> 命令安装管理页面的插件。</p><p>然后双击rabbitmq-server.bat启动脚本</p><p>打开浏览器输入<a href="http://localhost:15672/?spm=a2c6h.12873639.article-detail.9.433733dfV551eG">http://localhost:15672</a>，账号密码默认是：guest/guest</p><p>到这一步，安装就大功告成了！</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go@main/imgs/image-20221215194155884.png" alt="image-20221215194155884"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://erlang.org/download/otp_src_20.0.tar.gz</span><br><span class="line">tar -zxvf otp_src_20.0.tar.gz</span><br><span class="line">cd otp_src_20.0</span><br><span class="line">./configure</span><br><span class="line">make -j8</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="ubuntu">ubuntu</h3><p>安装erlang</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install erlang-nox</span><br></pre></td></tr></table></figure><p>安装Rabbitmq</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install rabbitmq-server</span><br></pre></td></tr></table></figure><p>常用命令</p><p>启动、停止、重启、状态rabbitMq命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rabbitmq-server start</span><br><span class="line">sudo rabbitmq-server stop</span><br><span class="line">sudo rabbitmq-server restart</span><br><span class="line">sudo rabbitmqctl status</span><br></pre></td></tr></table></figure><p>启用rabbitmq自带的一个web插件，可以用来管理消息队列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//rabbitmq默认端口号5672，web管理端口号是15672，管理地址为http://ip:15672</span><br><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure><p>创建用户，指定用户名以及密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//创建用户</span><br><span class="line">rabbitmqctl add_user admin 123456 </span><br><span class="line">//用户名admin,密码123456修改密码：</span><br><span class="line">rabbitmqctl  change_password  username&#x27;123456&#x27;</span><br></pre></td></tr></table></figure><p>添加admin，并赋予administrator权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 添加admin用户，密码设置为admin。</span><br><span class="line">sudo rabbitmqctl add_user  admin  admin  </span><br><span class="line"></span><br><span class="line">// 赋予权限</span><br><span class="line">sudo rabbitmqctl set_user_tags admin administrator </span><br><span class="line"></span><br><span class="line">// 赋予virtual host中所有资源的配置、写、读权限以便管理其中的资源</span><br><span class="line">sudo rabbitmqctl  set_permissions -p / admin &#x27;.*&#x27; &#x27;.*&#x27; &#x27;.*&#x27;</span><br></pre></td></tr></table></figure><p>参考链接</p><p><a href="https://developer.aliyun.com/article/769883#slide-4">windows安装参考</a></p><p><a href="https://blog.51cto.com/u_15782374/5656192">ubuntu安装参考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reverse1</title>
      <link href="/2022/12/09/reverse/"/>
      <url>/2022/12/09/reverse/</url>
      
        <content type="html"><![CDATA[<h2 id="reverse1">reverse1</h2><p><a href="https://files.buuoj.cn/files/81c48295620d635f0c7e35b41efcc52d/b095c2d1-aa44-4e11-9ab5-137f66e1a48c.rar">文件下载地址</a></p><p>使用Exeinfo打开发现没壳 64位</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go/imgs/image-20221130225458281.png" alt="image-20221130225458281"></p><p>在start中看了一下，没什么东西，</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go/imgs/image-20221130225749683.png" alt="image-20221130225749683"></p><p>直接<code>shift + F12</code> 查看 字符串， 然后使用 <code>ctrl + f</code> 搜索flag</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go/imgs/image-20221130225940013.png" alt="image-20221130225940013"></p><p>到下图这个位置直接使用 <code>F5</code> 跳转到伪代码</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go/imgs/image-20221130230010430.png" alt="image-20221130230010430"></p><p>直接双击点str2，看到str2 = <code>&#123;hello_world&#125;</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go/imgs/image-20221130230221409.png" alt="image-20221130230221409"></p><p>代码分析以及注释</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Str2 = &#123;hello_world&#125;</span></span><br><span class="line"><span class="comment">// 对Str2进行处理</span></span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; ; ++j )</span><br><span class="line">  &#123;</span><br><span class="line">    v8 = j;</span><br><span class="line">    v2 = j_strlen(Str2);</span><br><span class="line">    <span class="keyword">if</span> ( v8 &gt; v2 )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">// 将Str2的 o 变成 0</span></span><br><span class="line">    <span class="keyword">if</span> ( Str2[j] == <span class="string">&#x27;o&#x27;</span> )</span><br><span class="line">      Str2[j] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_1400111D1(<span class="string">&quot;input the flag:&quot;</span>);</span><br><span class="line">  sub_14001128F(<span class="string">&quot;%20s&quot;</span>, Str1);</span><br><span class="line">  v3 = j_strlen(Str2);</span><br><span class="line"><span class="comment">// 判断Str2变形之后是否与 输入的值相等 </span></span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(Str1, Str2, v3) )</span><br><span class="line">    sub_1400111D1(<span class="string">&quot;this is the right flag!/n&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    sub_1400111D1(<span class="string">&quot;wrong flag/n&quot;</span>);</span><br><span class="line">  sub_14001113B(v5, &amp;unk_140019D00);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/kcldh/kcldh-pic-go/imgs/image-20221130230823770.png" alt="image-20221130230823770"></p><p>flag = <code>flag&#123;hell0_w0rld&#125;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
